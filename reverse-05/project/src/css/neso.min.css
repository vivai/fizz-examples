@charset "UTF-8";
/*! Neso
 * SCSS Framework | Version 0.0.1 | MIT Liecense |Â 2016/09/12
 */
/*! _normalize.scss for neso | MIT License | github.com/vivai/neso
 *
 * The original normalize:
 * normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css
 */
progress,sub,sup{vertical-align:baseline}
button,hr,input{overflow:visible}
body,mark{color:#000}
*,button,legend{box-sizing:border-box}
button,div.palette{white-space:nowrap}
html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}
article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}
audio,canvas,progress,video{display:inline-block}
audio:not([controls]){display:none;height:0}
[hidden],template{display:none}
a{background-color:transparent;-webkit-text-decoration-skip:objects}
a:active,a:hover{outline-width:0}
abbr[title]{text-decoration:underline dotted}
b,strong{font-weight:bolder}
dfn{font-style:italic}
h1{font-size:2em;margin:.67em 0}
mark{background-color:#ff0}
small{font-size:80%}
sub,sup{font-size:75%;line-height:0;position:relative}
sub{bottom:-.25em}
sup{top:-.5em}
img{border-style:none}
svg:not(:root){overflow:hidden}
code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}
figure{margin:1em 40px}
hr{box-sizing:content-box;border:none;background-color:#acacac;height:1px}
button,input,select,textarea{font:inherit;margin:0}
optgroup{font-weight:700}
button,input{}
button,select{text-transform:none}
[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}
[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}
[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}
fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}
legend{color:inherit;display:table;max-width:100%;padding:0;white-space:normal}
textarea{overflow:auto}
[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}
[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}
[type=search]{-webkit-appearance:textfield;outline-offset:-2px}
[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}
::-webkit-input-placeholder{color:inherit;opacity:.54}
::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}
/*! Neso */
.size-1{width:80px!important}
.size-2{width:160px!important}
.size-3{width:240px!important}
.size-4{width:320px!important}
.size-5{width:400px!important}
.size-6{width:480px!important}
.size-7{width:560px!important}
.size-8{width:640px!important}
.size-9{width:720px!important}
.size-10{width:800px!important}
.size-11{width:880px!important}
.size-12{width:960px!important}
body{margin:0;font:100% helvetica,sans-serif;background:#fff}
.hidden{display:none!important}
button,nav .brand{display:inline-block}
.center{margin:0 auto}
div.palette{height:2.5rem}
span.color{padding:.5rem}
span.gray-darken-10{background-color:#939393}
span.gray{background-color:#acacac}
span.gray-lighten-10{background-color:#c6c6c6}
span.gray-lighten-20{background-color:#dfdfdf}
span.gray-lighten-30{background-color:#f9f9f9}
span.primary{background-color:#1e90ff}
button{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;zoom:1;border-radius:3px;border:1px solid #939393;cursor:pointer;color:#1a1a1a;line-height:normal;vertical-align:middle;text-align:center;background:#dfdfdf;padding:.5rem 1rem}
button:hover{background:#c6c6c6}
button:disabled{cursor:default;color:#4d4d4d;border:1px solid #dfdfdf;background:lightn(#acacac,30%)}
input[type=text]{vertical-align:middle;padding:.5rem;border-radius:3px;border:1px solid #acacac}
input[type=text]:disabled{cursor:default;background-color:#fff;color:#4d4d4d;border:1px solid #dfdfdf}
div.form-group button:first-child,div.form-group input:first-child{border-right:none;border-top-right-radius:0;border-bottom-right-radius:0}
div.form-group button:last-child,div.form-group input:last-child{border-top-left-radius:0;border-bottom-left-radius:0}
main{margin:1rem}
nav a{color:#666;text-decoration:none}
nav a:hover{color:#000}
nav .brand{padding:.5rem 0;margin-right:1rem;font-weight:700}
nav.top{background-color:#f9f9f9;border-bottom:#acacac 1px solid;padding:0 1rem}
nav.top a{padding:.5rem}
nav.top a.selected{color:#000;background-color:#c6c6c6}
nav.top ul{display:inline;padding:0;list-style:none}
nav.top li{display:inline-block}
div.card{border-radius:3px;padding:1rem;width:480px;border:1px solid #acacac}
div.grid{display:-webkit-box;display:flex}
div.grid>div{margin:0;display:inline-block}
div.grid .col-1{width:8.33333%}
div.grid .col-2{width:16.66667%}
div.grid .col-3{width:25%}
div.grid .col-4{width:33.33333%}
div.grid .col-5{width:41.66667%}
div.grid .col-6{width:50%}
div.grid .col-7{width:58.33333%}
div.grid .col-8{width:66.66667%}
div.grid .col-9{width:75%}
div.grid .col-10{width:83.33333%}
div.grid .col-11{width:91.66667%}
div.grid .col-12{width:100%}
/*! Extensions */
button.primary{border:1px solid #000f1e;color:#e6e6e6;background:#005db7}
button.primary:hover{background:#004384}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5lc28vbm9ybWFsaXplL19odG1sNS5zY3NzIiwibmVzby9ub3JtYWxpemUvX3RleHQuc2NzcyIsIm1haW4uY3NzIiwibmVzby9ub3JtYWxpemUvX2Zvcm1zLnNjc3MiLCJuZXNvL25vcm1hbGl6ZS9fZ3JvdXBpbmcuc2NzcyIsIm5lc28vX2Jhc2Uuc2NzcyIsIm5lc28vX2J1dHRvbi5zY3NzIiwibmVzby9fcGFsZXR0ZS5zY3NzIiwibmVzby9ub3JtYWxpemUvX2Jhc2Uuc2NzcyIsIm5lc28vbm9ybWFsaXplL19saW5rcy5zY3NzIiwibmVzby9ub3JtYWxpemUvX2VtYmVkLnNjc3MiLCJuZXNvL19zaXplLnNjc3MiLCJuZXNvL19uYXZpZ2F0aW9uLnNjc3MiLCJuZXNvL19pbnB1dC5zY3NzIiwibmVzby9fc3RydWN0dXJlLnNjc3MiLCJuZXNvL19jYXJkLnNjc3MiLCJuZXNvL19ncmlkLnNjc3MiLCJuZXNvL2V4dGVuc2lvbi9fYnV0dG9uLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBd0NBLFNDTUEsSUM2RkEsSUR4RkUsZUFBQTtBRTVCRixPQ0FBLEdGc01BLE1DcE1FLFNBQXFCO0FFbEJ2QixLSnlCQSxLSXRCRSxNQUFBO0FBUkYsRUNGQSxPSGdHQSxPRzFGRSxXQUFBO0FBTkYsT0NBQSxZRFNFLFlBQUE7QUVMRixLQUNFLHFCQUFBLEtBQ0EseUJBQUE7QVJDRixRRXVCQSxNQUNBLFFBQ0EsV0FDQSxPQUNBLE9BQ0EsT0FDQSxLQUNBLEtBQ0EsSUFDQSxRQUNBLFFGckJFLFFBQWtCO0FBS3BCLE1Fd0JBLE9BQ0EsU0FDQSxNRnRCRSxRQUFBO0FBS0Ysc0JBQ0UsUUFBQSxLQUNBLE9BQUE7QUVvQ0YsU0Z4QkEsU0FFRSxRQUFBO0FTMUNGLEVBQ0UsaUJBQUEsWUFDQSw2QkFBc0M7QUFPeEMsU1AwRUEsUU94RUUsY0FBQTtBUmJGLFlBQ0UsZ0JBQUEsVUFBQTtBQUtGLEVDNkZBLE9EM0ZFLFlBQUE7QUFLRixJQUNFLFdBQUE7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Qk0sUUFBQTtBQXJCTixtQkF3QlEsTUFBQSxLQUNBLGlCQUFBO0FBekJSLFdBNEJNLFFBQUEsT0FDQSxRQUFBLEVBQ0EsV0FBQTtBQTlCTixXQWlDTSxRQUFBO0FHakNOLFNBR0ksY0FBQSxJQUNBLFFBQUEsS0FDQSxNQUFBLE1BQ0EsT0FBQSxJQUFBLE1BQUE7QUNOSixTQUNFLFFBQUEsWUFBQSxRQUFBO0FBREYsYUFJSSxPQUFBLEVBQ0EsUUFBQTtBQUxKLGdCQVFJLE1BQUE7QUFSSixnQkFXSSxNQUFBO0FBWEosZ0JBY0ksTUFBQTtBQWRKLGdCQWlCSSxNQUFBO0FBakJKLGdCQW9CSSxNQUFBO0FBcEJKLGdCQXVCSSxNQUFBO0FBdkJKLGdCQTBCSSxNQUFBO0FBMUJKLGdCQTZCSSxNQUFBO0FBN0JKLGdCQWdDSSxNQUFBO0FBaENKLGlCQW1DSSxNQUFBO0FBbkNKLGlCQXNDSSxNQUFBO0FBdENKLGlCQXlDSSxNQUFBOztBQ3pDSixlQUNFLE9BQUEsSUFBQSxNQUFBLFFBQ0EsTUFBQSxRQUNBLFdBQUE7QUFFRixxQkFDRSxXQUFBIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9ucyAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiIsIi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmMDA7XG4gIGNvbG9yOiAjMDAwMDAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qISBOZXNvXG4gKiBTQ1NTIEZyYW1ld29yayB8IFZlcnNpb24gMC4wLjEgfCBNSVQgTGllY2Vuc2UgfMKgMjAxNi8wOS8xMlxuICovXG4vKiEgX25vcm1hbGl6ZS5zY3NzIGZvciBuZXNvIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL3ZpdmFpL25lc29cbiAqXG4gKiBUaGUgb3JpZ2luYWwgbm9ybWFsaXplOlxuICogbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzXG4gKi9cbi8qKlxuICogQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5odG1sIHtcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnMgKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rcyAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZjAwO1xuICBjb2xvcjogIzAwMDAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnQgKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudCAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zICovXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIFByZXZlbnRpbmcgc2VsZWN0aW9uLlxuICovXG5idXR0b24ge1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lOyB9XG5cbi8qIHN0eWxlbGludC1kaXNhYmxlIHNlbGVjdG9yLW5vLWNvbWJpbmF0b3IgKi9cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qIHN0eWxlbGludC1kaXNhYmxlIHZhbHVlLWtleXdvcmQtY2FzZSAqL1xuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qIHN0eWxlbGludC1lbmFibGUgKi9cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyohIE5lc28gKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlIG5vLWluZGlzdGluZ3Vpc2hhYmxlLWNvbG9ycyAqL1xuLyogc3R5bGVsaW50LWVuYWJsZSAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUgZGVjbGFyYXRpb24tbm8taW1wb3J0YW50ICovXG4uc2l6ZS0xIHtcbiAgd2lkdGg6IDgwcHggIWltcG9ydGFudDsgfVxuXG4uc2l6ZS0yIHtcbiAgd2lkdGg6IDE2MHB4ICFpbXBvcnRhbnQ7IH1cblxuLnNpemUtMyB7XG4gIHdpZHRoOiAyNDBweCAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTQge1xuICB3aWR0aDogMzIwcHggIWltcG9ydGFudDsgfVxuXG4uc2l6ZS01IHtcbiAgd2lkdGg6IDQwMHB4ICFpbXBvcnRhbnQ7IH1cblxuLnNpemUtNiB7XG4gIHdpZHRoOiA0ODBweCAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTcge1xuICB3aWR0aDogNTYwcHggIWltcG9ydGFudDsgfVxuXG4uc2l6ZS04IHtcbiAgd2lkdGg6IDY0MHB4ICFpbXBvcnRhbnQ7IH1cblxuLnNpemUtOSB7XG4gIHdpZHRoOiA3MjBweCAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTEwIHtcbiAgd2lkdGg6IDgwMHB4ICFpbXBvcnRhbnQ7IH1cblxuLnNpemUtMTEge1xuICB3aWR0aDogODgwcHggIWltcG9ydGFudDsgfVxuXG4uc2l6ZS0xMiB7XG4gIHdpZHRoOiA5NjBweCAhaW1wb3J0YW50OyB9XG5cbi8qIHN0eWxlbGludC1lbmFibGUgKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlIHNlbGVjdG9yLW5vLXVuaXZlcnNhbCAqL1xuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuLyogc3R5bGVsaW50LWVuYWJsZSAqL1xuYm9keSB7XG4gIGZvbnQ6IDEwMCUgaGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICBjb2xvcjogIzAwMDAwMDsgfVxuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBkZWNsYXJhdGlvbi1uby1pbXBvcnRhbnQgKi9cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuLyogc3R5bGVsaW50LWVuYWJsZSAqL1xuLmNlbnRlciB7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbmhyIHtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWNhY2FjO1xuICBoZWlnaHQ6IDFweDsgfVxuXG5kaXYucGFsZXR0ZSB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGhlaWdodDogMi41cmVtOyB9XG5cbnNwYW4uY29sb3Ige1xuICBwYWRkaW5nOiAwLjVyZW07IH1cblxuc3Bhbi5ncmF5LWRhcmtlbi0xMCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5MzkzOTM7IH1cblxuc3Bhbi5ncmF5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2FjYWNhYzsgfVxuXG5zcGFuLmdyYXktbGlnaHRlbi0xMCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjNmM2YzY7IH1cblxuc3Bhbi5ncmF5LWxpZ2h0ZW4tMjAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGZkZmRmOyB9XG5cbnNwYW4uZ3JheS1saWdodGVuLTMwIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTsgfVxuXG5zcGFuLnByaW1hcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWU5MGZmOyB9XG5cbmJ1dHRvbiB7XG4gIHpvb206IDE7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyOiAjOTM5MzkzIHNvbGlkIDFweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGNvbG9yOiAjMWExYTFhO1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICNkZmRmZGY7XG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtOyB9XG5cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNjNmM2YzY7IH1cblxuYnV0dG9uOmRpc2FibGVkIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBjb2xvcjogIzRkNGQ0ZDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RmZGZkZjtcbiAgYmFja2dyb3VuZDogbGlnaHRuKCNhY2FjYWMsIDMwJSk7IH1cblxuaW5wdXRbdHlwZT1cInRleHRcIl0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2FjYWNhYzsgfVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXTpkaXNhYmxlZCB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiAjNGQ0ZDRkO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGZkZmRmOyB9XG5cbmRpdi5mb3JtLWdyb3VwIGlucHV0OmZpcnN0LWNoaWxkLFxuZGl2LmZvcm0tZ3JvdXAgYnV0dG9uOmZpcnN0LWNoaWxkIHtcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7IH1cblxuZGl2LmZvcm0tZ3JvdXAgaW5wdXQ6bGFzdC1jaGlsZCxcbmRpdi5mb3JtLWdyb3VwIGJ1dHRvbjpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDsgfVxuXG5tYWluIHtcbiAgbWFyZ2luOiAxcmVtOyB9XG5cbm5hdiBhIHtcbiAgY29sb3I6ICM2NjY2NjY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBuYXYgYTpob3ZlciB7XG4gICAgY29sb3I6ICMwMDAwMDA7IH1cblxubmF2IC5icmFuZCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMC41cmVtIDA7XG4gIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxubmF2LnRvcCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG4gIGJvcmRlci1ib3R0b206ICNhY2FjYWMgMXB4IHNvbGlkO1xuICBwYWRkaW5nOiAwIDFyZW07IH1cbiAgbmF2LnRvcCBhIHtcbiAgICBwYWRkaW5nOiAwLjVyZW07IH1cbiAgICBuYXYudG9wIGEuc2VsZWN0ZWQge1xuICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzZjNmM2OyB9XG4gIG5hdi50b3AgdWwge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbiAgbmF2LnRvcCBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbmRpdi5jYXJkIHtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBwYWRkaW5nOiAxcmVtO1xuICB3aWR0aDogNDgwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNhY2FjYWM7IH1cblxuZGl2LmdyaWQge1xuICBkaXNwbGF5OiBmbGV4OyB9XG4gIGRpdi5ncmlkID4gZGl2IHtcbiAgICBtYXJnaW46IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIGRpdi5ncmlkIC5jb2wtMSB7XG4gICAgd2lkdGg6IDguMzMzMzMlOyB9XG4gIGRpdi5ncmlkIC5jb2wtMiB7XG4gICAgd2lkdGg6IDE2LjY2NjY3JTsgfVxuICBkaXYuZ3JpZCAuY29sLTMge1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgZGl2LmdyaWQgLmNvbC00IHtcbiAgICB3aWR0aDogMzMuMzMzMzMlOyB9XG4gIGRpdi5ncmlkIC5jb2wtNSB7XG4gICAgd2lkdGg6IDQxLjY2NjY3JTsgfVxuICBkaXYuZ3JpZCAuY29sLTYge1xuICAgIHdpZHRoOiA1MCU7IH1cbiAgZGl2LmdyaWQgLmNvbC03IHtcbiAgICB3aWR0aDogNTguMzMzMzMlOyB9XG4gIGRpdi5ncmlkIC5jb2wtOCB7XG4gICAgd2lkdGg6IDY2LjY2NjY3JTsgfVxuICBkaXYuZ3JpZCAuY29sLTkge1xuICAgIHdpZHRoOiA3NSU7IH1cbiAgZGl2LmdyaWQgLmNvbC0xMCB7XG4gICAgd2lkdGg6IDgzLjMzMzMzJTsgfVxuICBkaXYuZ3JpZCAuY29sLTExIHtcbiAgICB3aWR0aDogOTEuNjY2NjclOyB9XG4gIGRpdi5ncmlkIC5jb2wtMTIge1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi8qISBFeHRlbnNpb25zICovXG5idXR0b24ucHJpbWFyeSB7XG4gIGJvcmRlcjogIzAwMGYxZSBzb2xpZCAxcHg7XG4gIGNvbG9yOiAjZTZlNmU2O1xuICBiYWNrZ3JvdW5kOiAjMDA1ZGI3OyB9XG5cbmJ1dHRvbi5wcmltYXJ5OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzAwNDM4NDsgfVxuIiwiLyogRm9ybXMgKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBQcmV2ZW50aW5nIHNlbGVjdGlvbi5cbiAqL1xuYnV0dG9uIHtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTsgfVxuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBzZWxlY3Rvci1uby1jb21iaW5hdG9yICovXG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlID0gXCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlID0gXCJyZXNldFwiXSxcblt0eXBlID0gXCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqLyB9XG5cbi8qIHN0eWxlbGludC1lbmFibGUgKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZSA9IFwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGUgPSBcInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGUgPSBcInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSB2YWx1ZS1rZXl3b3JkLWNhc2UgKi9cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlID0gXCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZSA9IFwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZSA9IFwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qIHN0eWxlbGludC1lbmFibGUgKi9cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblt0eXBlID0gXCJjaGVja2JveFwiXSxcblt0eXBlID0gXCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZSA9IFwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGUgPSBcIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlID0gXCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZSA9IFwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGUgPSBcInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqLyB9XG4iLCIvKiBHcm91cGluZyBjb250ZW50ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi8gfVxuIiwiLyogc3R5bGVsaW50LWRpc2FibGUgc2VsZWN0b3Itbm8tdW5pdmVyc2FsICovXG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbi8qIHN0eWxlbGludC1lbmFibGUgKi9cblxuYm9keSB7XG4gIGZvbnQ6IDEwMCUgJGZvbnQtc3RhY2s7XG4gIGJhY2tncm91bmQ6IGNvbG9yKFwiYmFja2dyb3VuZFwiKTtcbiAgY29sb3I6IGNvbG9yKFwidGV4dFwiKTsgfVxuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBkZWNsYXJhdGlvbi1uby1pbXBvcnRhbnQgKi9cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG5cbi5jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG5ociB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IoXCJib3JkZXJcIik7XG4gIGhlaWdodDogMXB4OyB9XG4iLCJidXR0b24ge1xuICB6b29tOiAxO1xuICBib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xuICBib3JkZXI6IGRhcmtlbihjb2xvcihcImJvcmRlclwiKSwgMTAlKSBzb2xpZCAxcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBjb2xvcjogbGlnaHRlbihjb2xvcihcInRleHRcIiksIDEwJSk7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogbGlnaHRlbihjb2xvcihcImdyYXlcIiksIDIwJSk7XG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtOyB9XG5cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6IGxpZ2h0ZW4oY29sb3IoXCJncmF5XCIpLCAxMCUpOyB9XG5cbmJ1dHRvbjpkaXNhYmxlZCB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgY29sb3I6IGxpZ2h0ZW4oY29sb3IoXCJ0ZXh0XCIpLCAzMCUpO1xuICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGVuKGNvbG9yKFwiYm9yZGVyXCIpLCAyMCUpO1xuICBiYWNrZ3JvdW5kOiBsaWdodG4oY29sb3IoXCJncmF5XCIpLCAzMCUpOyB9XG4iLCJkaXYucGFsZXR0ZSB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGhlaWdodDogMi41cmVtO1xufVxuXG5zcGFuLmNvbG9yIHtcbiAgcGFkZGluZzogMC41cmVtO1xufVxuXG5zcGFuLmdyYXktZGFya2VuLTEwIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKGNvbG9yKFwiZ3JheVwiKSwgMTAlKTtcbn1cblxuc3Bhbi5ncmF5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IoXCJncmF5XCIpO1xufVxuXG5zcGFuLmdyYXktbGlnaHRlbi0xMCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oY29sb3IoXCJncmF5XCIpLCAxMCUpO1xufVxuXG5zcGFuLmdyYXktbGlnaHRlbi0yMCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oY29sb3IoXCJncmF5XCIpLCAyMCUpO1xufVxuXG5zcGFuLmdyYXktbGlnaHRlbi0zMCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oY29sb3IoXCJncmF5XCIpLCAzMCUpO1xufVxuXG5zcGFuLnByaW1hcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcihcInByaW1hcnlcIik7XG59XG4iLCIvKipcbiAqIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuaHRtbCB7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuIiwiLyogTGlua3MgKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuIiwiLyogRW1iZWRkZWQgY29udGVudCAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4iLCIkY29sczogMTI7XG4kbWF4LXNpemU6IDk2MDtcblxuLyogc3R5bGVsaW50LWRpc2FibGUgZGVjbGFyYXRpb24tbm8taW1wb3J0YW50ICovXG5cbi5zaXplLTEge1xuICB3aWR0aDogc2l6ZS1weCgxLCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTIge1xuICB3aWR0aDogc2l6ZS1weCgyLCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTMge1xuICB3aWR0aDogc2l6ZS1weCgzLCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTQge1xuICB3aWR0aDogc2l6ZS1weCg0LCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTUge1xuICB3aWR0aDogc2l6ZS1weCg1LCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTYge1xuICB3aWR0aDogc2l6ZS1weCg2LCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTcge1xuICB3aWR0aDogc2l6ZS1weCg3LCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTgge1xuICB3aWR0aDogc2l6ZS1weCg4LCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTkge1xuICB3aWR0aDogc2l6ZS1weCg5LCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi5zaXplLTEwIHtcbiAgd2lkdGg6IHNpemUtcHgoMTAsICRjb2xzLCAkbWF4LXNpemUpICFpbXBvcnRhbnQ7IH1cblxuLnNpemUtMTEge1xuICB3aWR0aDogc2l6ZS1weCgxMSwgJGNvbHMsICRtYXgtc2l6ZSkgIWltcG9ydGFudDsgfVxuXG4uc2l6ZS0xMiB7XG4gIHdpZHRoOiBzaXplLXB4KDEyLCAkY29scywgJG1heC1zaXplKSAhaW1wb3J0YW50OyB9XG5cbi8qIHN0eWxlbGludC1lbmFibGUgKi9cbiIsIm5hdiB7XG5cbiAgYSB7XG4gICAgY29sb3I6IGxpZ2h0ZW4oY29sb3IoXCJ0ZXh0XCIpLCA0MCUpO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6IGNvbG9yKFwidGV4dFwiKTsgfX1cblxuICAuYnJhbmQge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nOiAwLjVyZW0gMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuICAmLnRvcCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbihjb2xvcihcImdyYXlcIiksIDMwJSk7XG4gICAgYm9yZGVyLWJvdHRvbTogY29sb3IoXCJncmF5XCIpIDFweCBzb2xpZDtcbiAgICBwYWRkaW5nOiAwIDFyZW07XG5cbiAgICBhIHtcbiAgICAgIHBhZGRpbmc6IDAuNXJlbTtcblxuICAgICAgJi5zZWxlY3RlZCB7XG4gICAgICAgIGNvbG9yOiBjb2xvcihcInRleHRcIik7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oY29sb3IoXCJncmF5XCIpLCAxMCUpOyB9fVxuXG4gICAgdWwge1xuICAgICAgZGlzcGxheTogaW5saW5lO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuICAgIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfX19XG4iLCJpbnB1dFt0eXBlID0gXCJ0ZXh0XCJdIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgcGFkZGluZzogMC41cmVtO1xuICBib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xuICBib3JkZXI6IDFweCBzb2xpZCBjb2xvcihcImJvcmRlclwiKTsgfVxuXG5pbnB1dFt0eXBlID0gXCJ0ZXh0XCJdOmRpc2FibGVkIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKGNvbG9yKFwiYm9yZGVyXCIpLCA0MCUpO1xuICBjb2xvcjogbGlnaHRlbihjb2xvcihcInRleHRcIiksIDMwJSk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0ZW4oY29sb3IoXCJib3JkZXJcIiksIDIwJSk7IH1cblxuZGl2LmZvcm0tZ3JvdXAge1xuXG4gIGlucHV0OmZpcnN0LWNoaWxkLFxuICBidXR0b246Zmlyc3QtY2hpbGQge1xuICAgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDsgfVxuXG4gIGlucHV0Omxhc3QtY2hpbGQsXG4gIGJ1dHRvbjpsYXN0LWNoaWxkIHtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7IH19XG4iLCJtYWluIHtcbiAgbWFyZ2luOiAxcmVtOyB9XG4iLCJkaXYge1xuXG4gICYuY2FyZCB7XG4gICAgYm9yZGVyLXJhZGl1czogJHJhZGl1cztcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIHdpZHRoOiBzaXplLXB4KDYpO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGNvbG9yKFwiYm9yZGVyXCIpOyB9fVxuIiwiZGl2LmdyaWQge1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gID4gZGl2IHtcbiAgICBtYXJnaW46IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbiAgLmNvbC0xIHtcbiAgICB3aWR0aDogc2l6ZS1wYygxKTsgfVxuXG4gIC5jb2wtMiB7XG4gICAgd2lkdGg6IHNpemUtcGMoMik7IH1cblxuICAuY29sLTMge1xuICAgIHdpZHRoOiBzaXplLXBjKDMpOyB9XG5cbiAgLmNvbC00IHtcbiAgICB3aWR0aDogc2l6ZS1wYyg0KTsgfVxuXG4gIC5jb2wtNSB7XG4gICAgd2lkdGg6IHNpemUtcGMoNSk7IH1cblxuICAuY29sLTYge1xuICAgIHdpZHRoOiBzaXplLXBjKDYpOyB9XG5cbiAgLmNvbC03IHtcbiAgICB3aWR0aDogc2l6ZS1wYyg3KTsgfVxuXG4gIC5jb2wtOCB7XG4gICAgd2lkdGg6IHNpemUtcGMoOCk7IH1cblxuICAuY29sLTkge1xuICAgIHdpZHRoOiBzaXplLXBjKDkpOyB9XG5cbiAgLmNvbC0xMCB7XG4gICAgd2lkdGg6IHNpemUtcGMoMTApOyB9XG5cbiAgLmNvbC0xMSB7XG4gICAgd2lkdGg6IHNpemUtcGMoMTEpOyB9XG5cbiAgLmNvbC0xMiB7XG4gICAgd2lkdGg6IHNpemUtcGMoMTIpOyB9fVxuIiwiYnV0dG9uLnByaW1hcnkge1xuICBib3JkZXI6IGRhcmtlbihjb2xvcihcInByaW1hcnlcIiksIDUwJSkgc29saWQgMXB4O1xuICBjb2xvcjogbGlnaHRlbihjb2xvcihcInRleHRcIiksIDkwJSk7XG4gIGJhY2tncm91bmQ6IGRhcmtlbihjb2xvcihcInByaW1hcnlcIiksIDIwJSk7IH1cblxuYnV0dG9uLnByaW1hcnk6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiBkYXJrZW4oY29sb3IoXCJwcmltYXJ5XCIpLCAzMCUpOyB9XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
